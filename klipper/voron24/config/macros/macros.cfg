[gcode_macro PRINT_START]
# Use PRINT_START for the slicer starting script - please customise for your slicer of choice
# Start GCODE should be for Prusa Slicer or SuperSlicer: print_start EXTRUDER_TEMP=[first_layer_temperature] BED_TEMP=[first_layer_bed_temperature]
# Start GCODE should be for Cura: print_start EXTRUDER_TEMP=[material_print_temperature] BED_TEMP=[material_bed_temperature]
gcode:
    {% set BED_TEMP = params.BED|default(100)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER|default(220)|float %}

    M117 Cleaning Nozzle...
    STATUS_CLEANING
    CLEAN_NOZZLE

    STATUS_READY
    # Start filtering before sensors can detect VOCs.
    SET_FAN_SPEED FAN=nevermore_fan SPEED=1
    # Disable VOC sensor drift calibration during a print
    NEVERMORE_VOC_CALIBRATION NEVERMORE=nevermore ENABLED=0

    M117 Homing...
    STATUS_HOMING
    G28

    M117 Clear Bed Meshing...
    STATUS_MESHING
    BED_MESH_CLEAR

    M117 Calibrating Z...
    STATUS_CALIBRATING_Z
    QUAD_GANTRY_LEVEL

    M117 Bed Meshing...
    STATUS_MESHING
    # BED_MESH_CALIBRATE ADAPTIVE=1
    BED_MESH_CALIBRATE
    SKEW_PROFILE LOAD=CaliFlower

    M117 Heating...
    STATUS_HEATING
    M140 S{BED_TEMP}                    ; set bed final temp
    M190 S{BED_TEMP}                    ; wait for bed final temp
   
    M117 Moving to X10 Y10...
    G90
    G0 X10.0 Y10.0 F5000.0

    STATUS_HEATING
    M104 S{EXTRUDER_TEMP}               ; set extruder final temp
    M109 S{EXTRUDER_TEMP}               ; wait for extruder final temp

    STATUS_READY
    # PURGE
    # PRIME_LINE

    M117 Printing...
    STATUS_PRINTING

[gcode_macro PURGE]
gcode:
    SAVE_GCODE_STATE NAME=BEFORE_PURGE
    M117 Purging
    G91
    G1 E9 F1000
    G90
    RESTORE_GCODE_STATE NAME=BEFORE_PURGE

[gcode_macro PRIME_LINE]
gcode:
    SAVE_GCODE_STATE NAME=BEFORE_PRIME
    M117 Prime Line
    G91
    G1 Z0.2 F200            ; Set nozzle height
    G92 E0.0                ; reset extrusion distance
    G1 X100.0 E9.0 F1000.0  ; intro line
    G1 X200.0 E10 F1000.0   ; intro line
    G0 Y0.1
    G1 X-200.0 E10 F1000.0   ; intro line
    G1 X-50.0 E9.0 F1000.0  ; intro line
    G1 Z1 F5000             ; Lift Z
    G92 E0.0                ; reset extrusion distance
    G90
    RESTORE_GCODE_STATE NAME=BEFORE_PRIME


[gcode_macro TURN_OFF_HEATERS]
rename_existing: NEVERMORE_CONTROLLER_INNER_TURN_OFF_HEATERS
gcode:
    NEVERMORE_CONTROLLER_INNER_TURN_OFF_HEATERS
    # Clear the fan control override, we're cooling down
    # NB: Setting SPEED=0 does *NOT* clear control override.
    #     It instead forces the speed to 0.
    #     Omit `SPEED` argument entirely to clear override.
    SET_FAN_SPEED FAN=nevermore_fan
    # Re-enable VOC sensor drift calibration
    NEVERMORE_VOC_CALIBRATION NEVERMORE=nevermore ENABLED=1


[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:

    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    TURN_OFF_HEATERS
    # Move nozzle away from print while retracting
    G91
    G1 X-2 Y-2 E-3 F300
    # Raise nozzle by 10mm
    G1 Z10 F3000
    G90
    G0 X10 Y350 F3600              ; park nozzle at rear
    M107                           ; turn off fan
    M109 R100                      ; wait for extruder to reach 100oC
    
    BED_MESH_CLEAR
    SKEW_PROFILE CLEAR=1

    M117 Finished!                 ; display message
    STATUS_OFF
 ;   LIGHTS_OFF

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
    # Parameters
    {% set z = params.Z|default(10)|int %}                                                   ; z hop amount

    {% if printer['pause_resume'].is_paused|int == 0 %}
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}                              ; set z hop variable for reference in resume macro
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}    ; set hotend temp variable for reference in resume macro

        SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0                                  ; disable filament sensor
        SAVE_GCODE_STATE NAME=PAUSE                                                          ; save current print position for resume
        BASE_PAUSE                                                                           ; pause print
        {% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}       ; check that zhop doesn't exceed z max
            G91                                                                              ; relative positioning
            G1 Z{z} F900                                                                     ; raise Z up by z hop amount
        {% else %}
            { action_respond_info("Pause zhop exceeds maximum Z height.") }                  ; if z max is exceeded, show message and set zhop value for resume to 0
            SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
        {% endif %}
        G90                                                                                  ; absolute positioning
        G1 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} F6000   ; park toolhead at front center
        SAVE_GCODE_STATE NAME=PAUSEPARK                                                      ; save parked position in case toolhead is moved during the pause (otherwise the return zhop can error)
        M104 S0                                                                              ; turn off hotend
        SET_IDLE_TIMEOUT TIMEOUT=43200                                                       ; set timeout to 12 hours
    {% endif %}


[gcode_macro RESUME]
rename_existing: BASE_RESUME
variable_zhop: 0
variable_etemp: 0
gcode:
    # Parameters
    {% set e = params.E|default(2.5)|int %}                                          ; hotend prime amount (in mm)

    {% if printer['pause_resume'].is_paused|int == 1 %}
        SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1                          ; enable filament sensor
        #INITIAL_RGB                                                                    ; reset LCD color
        SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}  ; set timeout back to configured value
        {% if etemp > 0 %}
            M109 S{etemp|int}                                                        ; wait for hotend to heat back up
        {% endif %}
        RESTORE_GCODE_STATE NAME=PAUSEPARK MOVE=1 MOVE_SPEED=100                     ; go back to parked position in case toolhead was moved during pause (otherwise the return zhop can error)
        G91                                                                          ; relative positioning
        M83                                                                          ; relative extruder positioning
        {% if printer[printer.toolhead.extruder].temperature >= printer.configfile.settings.extruder.min_extrude_temp %}
            G1 Z{zhop * -1} E{e} F900                                                ; prime nozzle by E, lower Z back down
        {% else %}
            G1 Z{zhop * -1} F900                                                     ; lower Z back down without priming (just in case we are testing the macro with cold hotend)
        {% endif %}
        RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=60                          ; restore position
        BASE_RESUME                                                                  ; resume print
    {% endif %}


[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout} ; set timeout back to configured value
    CLEAR_PAUSE
    PRINT_END
    BASE_CANCEL_PRINT

######################################################################
# Filament Change
######################################################################

# M600: Filament Change. This macro will pause the printer, move the
# tool to the change position, and retract the filament 50mm. Adjust
# the retraction settings for your own extruder. After filament has
# been changed, the print can be resumed from its previous position
# with the "RESUME" gcode.


[gcode_macro M600]
gcode:
    #LCDRGB R=0 G=1 B=0  ; Turn LCD green
    PAUSE                ; Pause


[gcode_macro _CG28]
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28
    {% endif %}



[gcode_macro DISABLE_MOTORS]
gcode:
    M18

[pause_resume]


