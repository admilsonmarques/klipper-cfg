[gcode_macro _servo_test_angle]
gcode:
	{% set ANGLE  = params.ANGLE|int %}

    SET_SERVO SERVO=klicky_servo ANGLE={ANGLE}
    G4 P250
    SET_SERVO SERVO=klicky_servo WIDTH=0.0

[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
# Start GCODE should be for Prusa Slicer or SuperSlicer: print_start EXTRUDER_TEMP=[first_layer_temperature] BED_TEMP=[first_layer_bed_temperature]
# Start GCODE should be for Cura: print_start EXTRUDER_TEMP=[material_print_temperature] BED_TEMP=[material_bed_temperature]
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}

    M117 Heating...
    M140 S{BED_TEMP}                    ; set bed final temp
    M104 S{EXTRUDER_TEMP}               ; set extruder final temp
    M190 S{BED_TEMP}                    ; wait for bed final temp
    M109 S{EXTRUDER_TEMP}               ; wait for extruder final temp

    M117 Homing...
    G28 Y0 X0 Z0

    M117 Calibrating Z...

    CALIBRATE_Z

    BED_MESH_PROFILE LOAD=default

    ; G91 ; relative movements
    ; G1 Z10 F5000 ; lift nozzle
    G90 ; back to absolute
    G0 X10 Y10 F6000

    ; M117 Home Z with hot bed
    ; G28 Z0
    ;BED_MESH_CALIBRATE
    ;PURGE
    PRIME_LINE

    G90
    G1 Z5.0 F6000
    G92 E0                              ;zero the extruded length again
    G1 F9000
    M117 Printing

[gcode_macro PURGE]
gcode:
    SAVE_GCODE_STATE NAME=BEFORE_PURGE
    M117 Purging
    G0 X0 Y0 F5000
    G91
    G1 E9 F1000
    G90
    RESTORE_GCODE_STATE NAME=BEFORE_PURGE

[gcode_macro PRIME_LINE]
gcode:
    SAVE_GCODE_STATE NAME=BEFORE_PRIME
    M117 Prime Line
    G0 X10.0 Y3.0 F5000.0  ; Go to X3 Y3
    G1 Z0.2 F200            ; Set nozzle height
    G92 E0.0                ; reset extrusion distance
    G1 X100.0 E9.0 F1000.0   ; intro line
    G1 X200.0 E10 F1000.0   ; intro line
    G92 E0.0                ; reset extrusion distance
    G1 Z1 F5000             ; Lift Z
    RESTORE_GCODE_STATE NAME=BEFORE_PRIME

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:

    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-1.0 F3600                 ; retract filament
    G91                            ; relative positioning
    G0 Z1.00 X20.0 Y20.0 F2000     ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G1 Z5 F3000                    ; move nozzle up 5mm
    G90                            ; absolute positioning
    G0 X0 Y220 F3600               ; park nozzle at rear
    BED_MESH_CLEAR
    M117 Finished!                 ; display message

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
    TURN_OFF_HEATERS
    CANCEL_PRINT_BASE

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    ##### set park positon for x and y #####
    # default is your max posion from your printer.cfg
    {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
    {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% if act_z < (max_z - 2.0) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    PAUSE_BASE
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E-{E} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}
      G1 Z{z_safe} F900
      G90
      G1 X{x_park} Y{y_park} F6000
    {% else %}
      {action_respond_info("Printer not homed")}
    {% endif %}

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    #### get VELOCITY parameter if specified ####
    {% if 'VELOCITY' in params|upper %}
      {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
    {%else %}
      {% set get_params = "" %}
    {% endif %}
    ##### end of definitions #####
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G91
      G1 E{E} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}
    RESUME_BASE {get_params}



# [gcode_macro CANCEL_PRINT]
# rename_existing: BASE_CANCEL_PRINT
# # default_parameter_X: 220
# # default_parameter_Y: 220
# # default_parameter_Z: 10
# gcode:
#     M104 S0
#     M140 S0
#     M141 S0
#     M106 S0
#     CLEAR_PAUSE
#     RESET_SD
#     BASE_CANCEL_PRINT

# [gcode_macro PAUSE]
# rename_existing: BASE_PAUSE
# # default_parameter_X: 220
# # default_parameter_Y: 220
# # default_parameter_Z: 10
# gcode:
#     SAVE_GCODE_STATE NAME=PAUSE_state
#     BASE_PAUSE
#     G91
#     G1 E-1.7 F2100
#     G1 Z{Z}
#     G90
#     G1 X{X} Y{Y} F6000
#     G91

# [gcode_macro RESUME]
# rename_existing: BASE_RESUME
# gcode:
#     G91
#     G1 E1.7 F2100
#     G91
#     RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1
#     BASE_RESUME

[gcode_macro DISABLE_MOTORS]
gcode:
    M18

# [gcode_macro ZUP]
# gcode:
#     SET_GCODE_OFFSET Z_ADJUST=0.01 MOVE=1

# [gcode_macro ZDOWN]
# gcode:
#     SET_GCODE_OFFSET Z_ADJUST=-0.01 MOVE=1
